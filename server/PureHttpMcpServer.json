{
  "openapi": "3.0.1",
  "info": {
    "title": "PureHttpMcpServer | v1",
    "version": "1.0.0"
  },
  "paths": {
    "/completions": {
      "post": {
        "tags": [
          "Completions"
        ],
        "summary": "Create a completion (demo implementation)",
        "operationId": "CreateCompletion",
        "parameters": [
          {
            "$ref": "#/components/parameters/McpRequestId"
          }
        ],
        "requestBody": {
          "description": "The completion request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompleteRequestParams"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompleteResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/initialize": {
      "post": {
        "tags": [
          "Initialization"
        ],
        "summary": "Initialize the MCP session and return server capabilities",
        "operationId": "Initialize",
        "parameters": [
          {
            "$ref": "#/components/parameters/McpRequestId"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InitializeRequestParams"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InitializeResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/logLevel": {
      "post": {
        "tags": [
          "Logging"
        ],
        "description": "Set the current logging level.",
        "operationId": "SetLogLevel",
        "parameters": [
          {
            "$ref": "#/components/parameters/McpRequestId"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetLevelRequestParams"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/notifications": {
      "get": {
        "tags": [
          "Notifications"
        ],
        "summary": "Get server notifications (groups)",
        "operationId": "GetNotifications",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IServerNotification"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Notifications"
        ],
        "summary": "Acknowledge a previously received group of notifications",
        "operationId": "AcknowledgeNotifications",
        "parameters": [
          {
            "name": "Mcp-Group-Id",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "A collection of notifications being sent from client to server.",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/IClientNotification"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Accepted"
          }
        }
      }
    },
    "/ping": {
      "get": {
        "tags": [
          "Ping"
        ],
        "summary": "Ping the server; returns 202 Accepted to indicate reachability",
        "operationId": "Ping",
        "parameters": [
          {
            "$ref": "#/components/parameters/McpRequestId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/prompts": {
      "get": {
        "tags": [
          "Prompts"
        ],
        "summary": "List available prompts",
        "operationId": "ListPrompts",
        "parameters": [
          {
            "$ref": "#/components/parameters/McpRequestId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/prompts/{name}": {
      "post": {
        "tags": [
          "Prompts"
        ],
        "summary": "Get and render a named prompt",
        "operationId": "GetPrompt",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/McpRequestId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/requests": {
      "get": {
        "tags": [
          "Requests"
        ],
        "summary": "Get server-initiated requests (one at a time)",
        "operationId": "GetServerRequest",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "McpRequestId": {
                "$ref": "#/components/headers/McpRequestId"
              }
            }
          }
        }
      }
    },
    "/resources": {
      "get": {
        "tags": [
          "Resources"
        ],
        "description": "List all available resources.",
        "operationId": "ListResources",
        "parameters": [
          {
            "$ref": "#/components/parameters/McpRequestId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Resources"
        ],
        "description": "Read a resource with a specific resource URI.",
        "operationId": "ReadResource",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/resources/subscribe": {
      "post": {
        "tags": [
          "Resources"
        ],
        "description": "Subscribe to changes for a specific resource URI.",
        "operationId": "SubscribeResource",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/resources/unsubscribe": {
      "post": {
        "tags": [
          "Resources"
        ],
        "description": "Unsubscribe from changes for a specific resource URI.",
        "operationId": "UnsubscribeResource",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/resources/templates": {
      "get": {
        "tags": [
          "Resources"
        ],
        "description": "List available resource templates.",
        "operationId": "ListResourceTemplates",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/responses": {
      "post": {
        "tags": [
          "Responses"
        ],
        "summary": "Receive client responses to server requests",
        "operationId": "ResponsesEndpoint",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/tools": {
      "get": {
        "tags": [
          "Tools"
        ],
        "summary": "Get all available tools",
        "operationId": "ListTools",
        "parameters": [
          {
            "$ref": "#/components/parameters/McpRequestId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListToolsResult"
                }
              }
            }
          }
        }
      }
    },
    "/tools/{name}/calls": {
      "post": {
        "tags": [
          "Tools"
        ],
        "summary": "Invoke a tool call by name",
        "operationId": "CallTool",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "The name of the tool to call",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Mcp-Request-Id",
            "in": "header",
            "description": "The unique request ID for tracking purposes",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/McpRequestId"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CallToolRequestParams"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CallToolResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Argument": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "CallToolRequestParams": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "arguments": {
            "type": "object",
            "nullable": true
          },
          "_meta": {
            "$ref": "#/components/schemas/JsonObject"
          }
        }
      },
      "CallToolResult": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array"
          },
          "structuredContent": {
            "$ref": "#/components/schemas/JsonNode"
          },
          "isError": {
            "type": "boolean",
            "nullable": true
          },
          "_meta": {
            "$ref": "#/components/schemas/JsonObject"
          }
        }
      },
      "ClientCapabilities": {
        "type": "object",
        "properties": {
          "experimental": {
            "type": "object",
            "nullable": true
          },
          "roots": {
            "$ref": "#/components/schemas/RootsCapability"
          },
          "sampling": {
            "$ref": "#/components/schemas/SamplingCapability"
          },
          "elicitation": {
            "$ref": "#/components/schemas/ElicitationCapability"
          }
        },
        "nullable": true
      },
      "CompleteContext": {
        "type": "object",
        "properties": {
          "arguments": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "nullable": true
      },
      "CompleteRequestParams": {
        "required": [
          "ref",
          "argument"
        ],
        "type": "object",
        "properties": {
          "ref": {
            "$ref": "#/components/schemas/Reference"
          },
          "argument": {
            "$ref": "#/components/schemas/Argument"
          },
          "context": {
            "$ref": "#/components/schemas/CompleteContext"
          },
          "_meta": {
            "$ref": "#/components/schemas/JsonObject"
          }
        }
      },
      "CompleteResult": {
        "type": "object",
        "properties": {
          "completion": {
            "$ref": "#/components/schemas/Completion"
          },
          "_meta": {
            "$ref": "#/components/schemas/JsonObject"
          }
        }
      },
      "Completion": {
        "type": "object",
        "properties": {
          "values": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "hasMore": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "CompletionsCapability": {
        "type": "object",
        "nullable": true
      },
      "ElicitationCapability": {
        "type": "object",
        "nullable": true
      },
      "IClientNotification": {
        "required": [
          "Method"
        ],
        "type": "object",
        "anyOf": [
          {
            "$ref": "#/components/schemas/IServerNotificationCancelledNotification"
          },
          {
            "$ref": "#/components/schemas/IClientNotificationInitializedNotification"
          },
          {
            "$ref": "#/components/schemas/IServerNotificationProgressNotification"
          },
          {
            "$ref": "#/components/schemas/IClientNotificationRootsListChangedNotification"
          }
        ],
        "discriminator": {
          "propertyName": "Method",
          "mapping": {
            "notifications/cancelled": "#/components/schemas/IClientNotificationCancelledNotification",
            "notifications/initialized": "#/components/schemas/IClientNotificationInitializedNotification",
            "notifications/progress": "#/components/schemas/IClientNotificationProgressNotification",
            "notifications/roots/list_changed": "#/components/schemas/IClientNotificationRootsListChangedNotification"
          }
        }
      },
      "IClientNotificationInitializedNotification": {
        "properties": {
          "Method": {
            "enum": [
              "notifications/initialized"
            ],
            "type": "string"
          },
          "method": {
            "type": "string"
          },
          "params": {
            "type": "object",
            "properties": {
              "_meta": {
                "$ref": "#/components/schemas/JsonObject"
              }
            }
          }
        }
      },
      "IClientNotificationRootsListChangedNotification": {
        "properties": {
          "Method": {
            "enum": [
              "notifications/roots/list_changed"
            ],
            "type": "string"
          },
          "method": {
            "type": "string"
          },
          "params": {
            "type": "object",
            "properties": {
              "_meta": {
                "$ref": "#/components/schemas/JsonObject"
              }
            }
          }
        }
      },
      "Implementation": {
        "required": [
          "name",
          "version"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "string"
          }
        }
      },
      "InitializeRequestParams": {
        "required": [
          "protocolVersion",
          "clientInfo"
        ],
        "type": "object",
        "properties": {
          "protocolVersion": {
            "type": "string"
          },
          "capabilities": {
            "$ref": "#/components/schemas/ClientCapabilities"
          },
          "clientInfo": {
            "$ref": "#/components/schemas/Implementation"
          },
          "_meta": {
            "$ref": "#/components/schemas/JsonObject"
          }
        },
        "nullable": true
      },
      "InitializeResult": {
        "required": [
          "protocolVersion",
          "capabilities",
          "serverInfo"
        ],
        "type": "object",
        "properties": {
          "protocolVersion": {
            "type": "string"
          },
          "capabilities": {
            "$ref": "#/components/schemas/ServerCapabilities"
          },
          "serverInfo": {
            "$ref": "#/components/schemas/Implementation"
          },
          "instructions": {
            "type": "string",
            "nullable": true
          },
          "_meta": {
            "$ref": "#/components/schemas/JsonObject"
          }
        }
      },
      "IServerNotification": {
        "required": [
          "Method"
        ],
        "type": "object",
        "anyOf": [
          {
            "$ref": "#/components/schemas/IServerNotificationCancelledNotification"
          },
          {
            "$ref": "#/components/schemas/IServerNotificationLoggingMessageNotification"
          },
          {
            "$ref": "#/components/schemas/IServerNotificationProgressNotification"
          },
          {
            "$ref": "#/components/schemas/IServerNotificationPromptListChangedNotification"
          },
          {
            "$ref": "#/components/schemas/IServerNotificationResourceListChangedNotification"
          },
          {
            "$ref": "#/components/schemas/IServerNotificationResourceUpdatedNotification"
          },
          {
            "$ref": "#/components/schemas/IServerNotificationToolListChangedNotification"
          }
        ],
        "discriminator": {
          "propertyName": "Method",
          "mapping": {
            "notifications/cancelled": "#/components/schemas/IServerNotificationCancelledNotification",
            "notifications/message": "#/components/schemas/IServerNotificationLoggingMessageNotification",
            "notifications/progress": "#/components/schemas/IServerNotificationProgressNotification",
            "notifications/prompts/list_changed": "#/components/schemas/IServerNotificationPromptListChangedNotification",
            "notifications/resources/list_changed": "#/components/schemas/IServerNotificationResourceListChangedNotification",
            "notifications/resources/updated": "#/components/schemas/IServerNotificationResourceUpdatedNotification",
            "notifications/tools/list_changed": "#/components/schemas/IServerNotificationToolListChangedNotification"
          }
        }
      },
      "IServerNotificationCancelledNotification": {
        "properties": {
          "Method": {
            "enum": [
              "notifications/cancelled"
            ],
            "type": "string"
          },
          "method": {
            "type": "string"
          },
          "params": {
            "type": "object",
            "properties": {
              "requestId": { },
              "reason": {
                "type": "string",
                "nullable": true
              },
              "_meta": {
                "$ref": "#/components/schemas/JsonObject"
              }
            }
          }
        }
      },
      "IServerNotificationLoggingMessageNotification": {
        "properties": {
          "Method": {
            "enum": [
              "notifications/message"
            ],
            "type": "string"
          },
          "method": {
            "type": "string"
          },
          "params": {
            "type": "object",
            "properties": {
              "level": {
                "$ref": "#/components/schemas/LoggingLevel"
              },
              "logger": {
                "type": "string",
                "nullable": true
              },
              "data": {
                "$ref": "#/components/schemas/NullableOfJsonElement"
              },
              "_meta": {
                "$ref": "#/components/schemas/JsonObject"
              }
            }
          }
        }
      },
      "IServerNotificationProgressNotification": {
        "properties": {
          "Method": {
            "enum": [
              "notifications/progress"
            ],
            "type": "string"
          },
          "method": {
            "type": "string"
          },
          "params": {
            "type": "object",
            "properties": {
              "_meta": {
                "$ref": "#/components/schemas/JsonObject"
              },
              "progressToken": { },
              "progress": {
                "type": "object",
                "properties": {
                  "progress": {
                    "type": "number",
                    "format": "float",
                    "nullable": true
                  },
                  "total": {
                    "type": "number",
                    "format": "float",
                    "nullable": true
                  },
                  "message": {
                    "type": "string",
                    "nullable": true
                  }
                }
              }
            }
          }
        }
      },
      "IServerNotificationPromptListChangedNotification": {
        "properties": {
          "Method": {
            "enum": [
              "notifications/prompts/list_changed"
            ],
            "type": "string"
          },
          "method": {
            "type": "string"
          },
          "params": {
            "type": "object",
            "properties": {
              "_meta": {
                "$ref": "#/components/schemas/JsonObject"
              }
            }
          }
        }
      },
      "IServerNotificationResourceListChangedNotification": {
        "properties": {
          "Method": {
            "enum": [
              "notifications/resources/list_changed"
            ],
            "type": "string"
          },
          "method": {
            "type": "string"
          },
          "params": {
            "type": "object",
            "properties": {
              "_meta": {
                "$ref": "#/components/schemas/JsonObject"
              }
            }
          }
        }
      },
      "IServerNotificationResourceUpdatedNotification": {
        "properties": {
          "Method": {
            "enum": [
              "notifications/resources/updated"
            ],
            "type": "string"
          },
          "method": {
            "type": "string"
          },
          "params": {
            "type": "object",
            "properties": {
              "uri": {
                "type": "string",
                "nullable": true
              },
              "_meta": {
                "$ref": "#/components/schemas/JsonObject"
              }
            }
          }
        }
      },
      "IServerNotificationToolListChangedNotification": {
        "properties": {
          "Method": {
            "enum": [
              "notifications/tools/list_changed"
            ],
            "type": "string"
          },
          "method": {
            "type": "string"
          },
          "params": {
            "type": "object",
            "properties": {
              "_meta": {
                "$ref": "#/components/schemas/JsonObject"
              }
            }
          }
        }
      },
      "JsonElement": { },
      "JsonNode": {
        "nullable": true
      },
      "JsonObject": {
        "type": "object",
        "nullable": true
      },
      "ListToolsResult": {
        "type": "object",
        "properties": {
          "tools": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tool"
            }
          },
          "nextCursor": {
            "type": "string",
            "nullable": true
          },
          "_meta": {
            "$ref": "#/components/schemas/JsonObject"
          }
        }
      },
      "LoggingCapability": {
        "type": "object",
        "nullable": true
      },
      "LoggingLevel": {
        "enum": [
          "debug",
          "info",
          "notice",
          "warning",
          "error",
          "critical",
          "alert",
          "emergency"
        ]
      },
      "NullableOfJsonElement": {
        "nullable": true
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PromptsCapability": {
        "type": "object",
        "properties": {
          "listChanged": {
            "type": "boolean",
            "nullable": true
          }
        },
        "nullable": true
      },
      "Reference": { },
      "ResourcesCapability": {
        "type": "object",
        "properties": {
          "subscribe": {
            "type": "boolean",
            "nullable": true
          },
          "listChanged": {
            "type": "boolean",
            "nullable": true
          }
        },
        "nullable": true
      },
      "RootsCapability": {
        "type": "object",
        "properties": {
          "listChanged": {
            "type": "boolean",
            "nullable": true
          }
        },
        "nullable": true
      },
      "SamplingCapability": {
        "type": "object",
        "nullable": true
      },
      "ServerCapabilities": {
        "type": "object",
        "properties": {
          "experimental": {
            "type": "object",
            "nullable": true
          },
          "logging": {
            "$ref": "#/components/schemas/LoggingCapability"
          },
          "prompts": {
            "$ref": "#/components/schemas/PromptsCapability"
          },
          "resources": {
            "$ref": "#/components/schemas/ResourcesCapability"
          },
          "tools": {
            "$ref": "#/components/schemas/ToolsCapability"
          },
          "completions": {
            "$ref": "#/components/schemas/CompletionsCapability"
          }
        }
      },
      "SetLevelRequestParams": {
        "required": [
          "level"
        ],
        "type": "object",
        "properties": {
          "level": {
            "$ref": "#/components/schemas/LoggingLevel"
          },
          "_meta": {
            "$ref": "#/components/schemas/JsonObject"
          }
        }
      },
      "Tool": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "inputSchema": {
            "$ref": "#/components/schemas/JsonElement"
          },
          "outputSchema": {
            "$ref": "#/components/schemas/NullableOfJsonElement"
          },
          "annotations": {
            "$ref": "#/components/schemas/ToolAnnotations"
          },
          "_meta": {
            "$ref": "#/components/schemas/JsonObject"
          }
        }
      },
      "ToolAnnotations": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "destructiveHint": {
            "type": "boolean",
            "nullable": true
          },
          "idempotentHint": {
            "type": "boolean",
            "nullable": true
          },
          "openWorldHint": {
            "type": "boolean",
            "nullable": true
          },
          "readOnlyHint": {
            "type": "boolean",
            "nullable": true
          }
        },
        "nullable": true
      },
      "ToolsCapability": {
        "type": "object",
        "properties": {
          "listChanged": {
            "type": "boolean",
            "nullable": true
          }
        },
        "nullable": true
      }
    },
    "parameters": {
      "McpRequestId": {
        "name": "Mcp-Request-Id",
        "in": "header",
        "description": "The unique request ID for tracking purposes",
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "headers": {
      "McpRequestId": {
        "description": "The unique request ID for tracking purposes",
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      }
    }
  },
  "tags": [
    {
      "name": "Completions"
    },
    {
      "name": "Initialization"
    },
    {
      "name": "Logging"
    },
    {
      "name": "Notifications"
    },
    {
      "name": "Ping"
    },
    {
      "name": "Prompts"
    },
    {
      "name": "Requests"
    },
    {
      "name": "Resources"
    },
    {
      "name": "Responses"
    },
    {
      "name": "Tools"
    }
  ]
}